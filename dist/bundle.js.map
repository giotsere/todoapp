{"version":3,"file":"bundle.js","mappings":"mBAGcA,SAASC,eAAe,SAAtC,MACMC,EAAWF,SAASC,eAAe,aACnCE,EAAaH,SAASC,eAAe,eACrCG,EAAYJ,SAASC,eAAe,cACpCI,EAAeL,SAASC,eAAe,iBAEvCK,EAAeN,SAASC,eAAe,iBAMvCM,EAAoB,aAC1B,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQL,KAAuB,CAC/D,CACI,CACI,MAAU,iBAEd,CAAC,CACG,KAAS,2BACT,OAAU,cAEd,CACI,KAAS,yBACT,OAAU,eAMlBM,EAAK,EAmET,SAASC,IA2DLR,EAAaS,UAAY,GAzDzBP,EAAMQ,SAAQC,IACV,MAAMC,EAAQD,EAAK,GAAGE,MAGhBC,EAAapB,SAASqB,cAAc,OAC1CD,EAAWE,UAAUC,IAAI,YACzBH,EAAWI,aAAa,KAAKX,KAE7B,MAAMY,EAAsBzB,SAASqB,cAAc,OACnDI,EAAoBH,UAAUC,IAAI,sBAElC,MAAMG,EAAe1B,SAASqB,cAAc,OAC5CK,EAAaJ,UAAUC,IAAI,cAC3BG,EAAaX,UAAYG,EAEzB,MAAMS,EAAoB3B,SAASqB,cAAc,OACjDM,EAAkBL,UAAUC,IAAI,oBAGhC,MAAMK,EAAa5B,SAASqB,cAAc,KAC1CO,EAAWN,UAAUC,IAAI,OACzBK,EAAWN,UAAUC,IAAI,gBAEzB,MAAMM,EAAwB7B,SAASqB,cAAc,OACrDQ,EAAsBP,UAAUC,IAAI,wBAGpCH,EAAWU,YAAYL,GACvBE,EAAkBG,YAAYF,GAC9BH,EAAoBK,YAAYJ,GAChCD,EAAoBK,YAAYH,GAChCP,EAAWU,YAAYD,GAEvBZ,EAAK,GAAGD,SAAQe,IACZ,MAAMC,EAAUhC,SAASqB,cAAc,OACvCW,EAAQV,UAAUC,IAAI,QACtBS,EAAQjB,UAAYgB,EAAKE,KACzBD,EAAQE,iBAAiB,SAAS,KAC9BF,EAAQV,UAAUa,OAAO,eAIV,aAAhBJ,EAAKK,QACJJ,EAAQV,UAAUC,IAAI,YAG1BM,EAAsBC,YAAYE,MAItC1B,EAAawB,YAAYV,GAYVpB,SAASqC,iBAAiB,qBAClCrB,SAAQsB,IACfA,EAAKJ,iBAAiB,SAAS,KAC3B,MAAMK,EAAQD,EAAKE,cAAcA,cAAc3B,GAC/CL,EAAMiC,OAAOjC,EAAMkC,QAAQH,GAAQ,GACnC5B,aAAagC,QAAQpC,EAAmBE,KAAKmC,UAAUpC,IACvDM,aAvIZA,IAEAV,EAAU8B,iBAAiB,YAAYW,IAC/B,UAAYA,EAAEC,KActB,WACI,GAAsB,IAAnB1C,EAAU2C,MAAY,CACrB,MAAMC,EAAO5C,EAAU2C,MAEjBE,EAAIjD,SAASqB,cAAc,KACjC4B,EAAElC,UAAYiC,EACdC,EAAE3B,UAAUC,IAAI,sBAChBlB,EAAayB,YAAYmB,GACzB5C,EAAa6C,MAAMC,QAAU,QAC7B/C,EAAU2C,MAAQ,IAtBnBK,MAIPpD,SAASkC,iBAAiB,SAASW,IAC1B3C,EAASmD,SAASR,EAAES,SACgB,GAAlCjD,EAAakD,mBAqBxB,WACI,MAAMrC,EAAQf,EAAW4C,MACnBS,EAAW,GACSxD,SAASqC,iBAAiB,uBAElCrB,SAAQe,IACtB,IACI0B,EAAQ,CACR,KAFO1B,EAAKhB,UAGZ,OAAU,cAGdyC,EAASE,KAAKD,MAGlB,MAAMxC,EAAO,CACT,CACI,MAAUC,GAEdsC,GAGJhD,EAAMkD,KAAKzC,GACXN,aAAagC,QAAQpC,EAAmBE,KAAKmC,UAAUpC,IAEvDL,EAAW4C,MAAQ,GACnB3C,EAAUW,UAAY,GACtBV,EAAaU,UAAY,GACzBV,EAAa6C,MAAMC,QAAU,OAE7BrC,IAlDQ6C,O","sources":["webpack://todoapp/./src/index.js"],"sourcesContent":["import \"./scss/style.scss\"\r\n\r\n\r\nconst input = document.getElementById(\"input\");\r\nconst inputBox = document.getElementById(\"input-box\");\r\nconst inputTitle = document.getElementById(\"input-title\");\r\nconst inputNote = document.getElementById(\"input-note\");\r\nconst inputContent = document.getElementById(\"input-content\");\r\n\r\nconst notesWrapper = document.getElementById(\"notes-wrapper\");\r\n// const notesWrapper = document.getElementById(\"note-box\");\r\n// const notesWrapper = document.getElementById(\"note-title-wrapper\");\r\n// const notesWrapper = document.getElementById(\"note-title\");\r\n// const notesWrapper = document.getElementById(\"note-content-wrapper\");\r\n\r\nconst LOCAL_STORAGE_KEY = \"todo.tasks\";\r\nlet tasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [\r\n    [\r\n        {\r\n            \"Title\" : \"Example Title\",\r\n        },\r\n        [{\r\n            \"Note\" : \"Example Note, incomplete\",\r\n            \"Status\": \"incomplete\"\r\n        },\r\n        {\r\n            \"Note\" : \"Example Note, complete\",\r\n            \"Status\": \"complete\"\r\n        },\r\n        ]\r\n    ]\r\n];\r\n\r\nlet id = 0;\r\n\r\nrenderNotes();\r\n\r\ninputNote.addEventListener(\"keypress\",(e) => {\r\n    if ('Enter' === e.key){\r\n       prepareNotes();\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"click\",(e) => {\r\n    if(!(inputBox.contains(e.target))){\r\n        if(inputContent.childElementCount != 0){\r\n            addToLocalStorage()\r\n        }\r\n    }\r\n})\r\n\r\n//Prepare the notes before adding them to the finalized Note Box\r\nfunction prepareNotes(){\r\n    if(inputNote.value != ''){\r\n        const note = inputNote.value;\r\n\r\n        const p = document.createElement('p');\r\n        p.innerText = note;\r\n        p.classList.add(\"input-content-note\");\r\n        inputContent.appendChild(p);\r\n        inputContent.style.display = \"block\";\r\n        inputNote.value = '';\r\n    }\r\n}\r\n\r\n\r\nfunction addToLocalStorage(){\r\n    const title = inputTitle.value;\r\n    const notesArr = [];\r\n    const inputContentNotes = document.querySelectorAll('.input-content-note');\r\n\r\n    inputContentNotes.forEach(item => {\r\n        let note = item.innerText;\r\n        let notes = {\r\n            \"Note\" : note,\r\n            \"Status\": \"incomplete\"\r\n        }\r\n\r\n        notesArr.push(notes);\r\n    });\r\n    \r\n    const task = [\r\n        {\r\n            \"Title\" : title,\r\n        },\r\n        notesArr\r\n    ];\r\n\r\n    tasks.push(task);\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks));\r\n\r\n    inputTitle.value = '';\r\n    inputNote.innerText = '';\r\n    inputContent.innerText = '';\r\n    inputContent.style.display = \"none\";\r\n\r\n    renderNotes();\r\n}\r\n\r\n//Adding the prepared notes to the Note Box\r\nfunction renderNotes(){\r\n    clearNotesWrapper();\r\n    tasks.forEach(task => {\r\n        const title = task[0].Title;\r\n\r\n        //create every div / subdiv\r\n        const divNoteBox = document.createElement('div');\r\n        divNoteBox.classList.add(\"note-box\");\r\n        divNoteBox.setAttribute(\"id\",id++);\r\n        \r\n        const divNoteTitleWrapper = document.createElement('div');\r\n        divNoteTitleWrapper.classList.add(\"note-title-wrapper\");\r\n\r\n        const divNoteTitle = document.createElement('div');\r\n        divNoteTitle.classList.add(\"note-title\");\r\n        divNoteTitle.innerText = title;\r\n\r\n        const divNoteDeleteIcon = document.createElement('div');\r\n        divNoteDeleteIcon.classList.add(\"note-delete-icon\");\r\n        \r\n\r\n        const deleteIcon = document.createElement('i')\r\n        deleteIcon.classList.add(\"fas\");\r\n        deleteIcon.classList.add(\"fa-trash-alt\");\r\n\r\n        const divNoteContentWrapper = document.createElement('div');\r\n        divNoteContentWrapper.classList.add(\"note-content-wrapper\");\r\n\r\n        //append divs to each other\r\n        divNoteBox.appendChild(divNoteTitleWrapper);\r\n        divNoteDeleteIcon.appendChild(deleteIcon);\r\n        divNoteTitleWrapper.appendChild(divNoteTitle);\r\n        divNoteTitleWrapper.appendChild(divNoteDeleteIcon);\r\n        divNoteBox.appendChild(divNoteContentWrapper);\r\n        \r\n        task[1].forEach(item => {\r\n            const divNote = document.createElement('div');\r\n            divNote.classList.add(\"note\");\r\n            divNote.innerText = item.Note;\r\n            divNote.addEventListener(\"click\", () => {\r\n                divNote.classList.toggle(\"complete\");\r\n            })\r\n            \r\n\r\n            if(item.Status === \"complete\"){\r\n                divNote.classList.add(\"complete\");\r\n            }\r\n    \r\n            divNoteContentWrapper.appendChild(divNote);\r\n        });\r\n            \r\n        // append note box to wrapper div, clear input fields\r\n        notesWrapper.appendChild(divNoteBox);\r\n        deleteNote();\r\n    })\r\n}\r\n\r\n\r\nfunction clearNotesWrapper(){\r\n    notesWrapper.innerText = '';\r\n}\r\n\r\nfunction deleteNote(){\r\n\r\n    const deleteIcon = document.querySelectorAll(\".note-delete-icon\");\r\n    deleteIcon.forEach(icon => {\r\n        icon.addEventListener(\"click\", () => {\r\n            const index = icon.parentElement.parentElement.id;\r\n            tasks.splice(tasks.indexOf(index), 1);\r\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks));\r\n            renderNotes();\r\n        });\r\n    });\r\n}"],"names":["document","getElementById","inputBox","inputTitle","inputNote","inputContent","notesWrapper","LOCAL_STORAGE_KEY","tasks","JSON","parse","localStorage","getItem","id","renderNotes","innerText","forEach","task","title","Title","divNoteBox","createElement","classList","add","setAttribute","divNoteTitleWrapper","divNoteTitle","divNoteDeleteIcon","deleteIcon","divNoteContentWrapper","appendChild","item","divNote","Note","addEventListener","toggle","Status","querySelectorAll","icon","index","parentElement","splice","indexOf","setItem","stringify","e","key","value","note","p","style","display","prepareNotes","contains","target","childElementCount","notesArr","notes","push","addToLocalStorage"],"sourceRoot":""}