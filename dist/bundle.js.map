{"version":3,"file":"bundle.js","mappings":"mBAGcA,SAASC,eAAe,SAAtC,MACMC,EAAWF,SAASC,eAAe,aACnCE,EAAaH,SAASC,eAAe,eACrCG,EAAYJ,SAASC,eAAe,cACpCI,EAAeL,SAASC,eAAe,iBAEvCK,EAAeN,SAASC,eAAe,iBAOvCM,EAAoB,aAC1B,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQL,KAAuB,CAC/D,CACI,CACI,MAAU,iBAEd,CAAC,CACG,KAAS,2BACT,OAAU,cAEd,CACI,KAAS,yBACT,OAAU,eAsEtB,SAASM,IAuDLP,EAAaQ,UAAY,GArDzBN,EAAMO,SAAQC,IACV,MAAMC,EAAQD,EAAK,GAAGE,MAGhBC,EAAanB,SAASoB,cAAc,OAC1CD,EAAWE,UAAUC,IAAI,YAEzB,MAAMC,EAAsBvB,SAASoB,cAAc,OACnDG,EAAoBF,UAAUC,IAAI,sBAElC,MAAME,EAAexB,SAASoB,cAAc,OAC5CI,EAAaH,UAAUC,IAAI,cAC3BE,EAAaV,UAAYG,EAEzB,MAAMQ,EAAoBzB,SAASoB,cAAc,OACjDK,EAAkBJ,UAAUC,IAAI,oBAEhC,MAAMI,EAAa1B,SAASoB,cAAc,KAC1CM,EAAWL,UAAUC,IAAI,OACzBI,EAAWL,UAAUC,IAAI,gBAEzB,MAAMK,EAAwB3B,SAASoB,cAAc,OACrDO,EAAsBN,UAAUC,IAAI,wBAGpCH,EAAWS,YAAYL,GACvBE,EAAkBG,YAAYF,GAC9BH,EAAoBK,YAAYJ,GAChCD,EAAoBK,YAAYH,GAChCN,EAAWS,YAAYD,GAEvBX,EAAK,GAAGD,SAAQc,IACZ,MAAMC,EAAU9B,SAASoB,cAAc,OACvCU,EAAQT,UAAUC,IAAI,QACtBQ,EAAQhB,UAAYe,EAAKE,KACzBD,EAAQE,iBAAiB,SAAS,KAC9BF,EAAQT,UAAUY,OAAO,eAGV,aAAhBJ,EAAKK,QACJJ,EAAQT,UAAUC,IAAI,YAG1BK,EAAsBC,YAAYE,MAItCxB,EAAasB,YAAYT,MAlHjCN,IAEAT,EAAU4B,iBAAiB,YAAYG,IAC/B,UAAYA,EAAEC,KActB,WACI,GAAsB,IAAnBhC,EAAUiC,MAAY,CACrB,MAAMC,EAAOlC,EAAUiC,MAEjBE,EAAIvC,SAASoB,cAAc,KACjCmB,EAAEzB,UAAYwB,EACdC,EAAElB,UAAUC,IAAI,sBAChBjB,EAAauB,YAAYW,GACzBlC,EAAamC,MAAMC,QAAU,QAC7BrC,EAAUiC,MAAQ,IAtBnBK,MAIP1C,SAASgC,iBAAiB,SAASG,IAC1BjC,EAASyC,SAASR,EAAES,SACgB,GAAlCvC,EAAawC,mBAqBxB,WACI,MAAM5B,EAAQd,EAAWkC,MACnBS,EAAW,GACS9C,SAAS+C,iBAAiB,uBAElChC,SAAQc,IACtB,IACImB,EAAQ,CACR,KAFOnB,EAAKf,UAGZ,OAAU,cAGdgC,EAASG,KAAKD,MAGlB,MAAMhC,EAAO,CACT,CACI,MAAUC,GAEd6B,GAGJtC,EAAMyC,KAAKjC,GACXL,aAAauC,QAAQ3C,EAAmBE,KAAK0C,UAAU3C,IAEvDL,EAAWkC,MAAQ,GACnBjC,EAAUU,UAAY,GACtBT,EAAaS,UAAY,GACzBT,EAAamC,MAAMC,QAAU,OAE7B5B,IAlDQuC,O","sources":["webpack://todoapp/./src/index.js"],"sourcesContent":["import \"./scss/style.scss\"\r\n\r\n\r\nconst input = document.getElementById(\"input\");\r\nconst inputBox = document.getElementById(\"input-box\");\r\nconst inputTitle = document.getElementById(\"input-title\");\r\nconst inputNote = document.getElementById(\"input-note\");\r\nconst inputContent = document.getElementById(\"input-content\");\r\n\r\nconst notesWrapper = document.getElementById(\"notes-wrapper\");\r\n// const notesWrapper = document.getElementById(\"note-box\");\r\n// const notesWrapper = document.getElementById(\"note-title-wrapper\");\r\n// const notesWrapper = document.getElementById(\"note-title\");\r\n// const notesWrapper = document.getElementById(\"note-delete-icon\");\r\n// const notesWrapper = document.getElementById(\"note-content-wrapper\");\r\n\r\nconst LOCAL_STORAGE_KEY = \"todo.tasks\";\r\nlet tasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [\r\n    [\r\n        {\r\n            \"Title\" : \"Example Title\",\r\n        },\r\n        [{\r\n            \"Note\" : \"Example Note, incomplete\",\r\n            \"Status\": \"incomplete\"\r\n        },\r\n        {\r\n            \"Note\" : \"Example Note, complete\",\r\n            \"Status\": \"complete\"\r\n        },\r\n        ]\r\n    ]\r\n];\r\nrenderNotes();\r\n\r\ninputNote.addEventListener(\"keypress\",(e) => {\r\n    if ('Enter' === e.key){\r\n       prepareNotes();\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"click\",(e) => {\r\n    if(!(inputBox.contains(e.target))){\r\n        if(inputContent.childElementCount != 0){\r\n            addToLocalStorage()\r\n        }\r\n    }\r\n})\r\n\r\n//Prepare the notes before adding them to the finalized Note Box\r\nfunction prepareNotes(){\r\n    if(inputNote.value != ''){\r\n        const note = inputNote.value;\r\n\r\n        const p = document.createElement('p');\r\n        p.innerText = note;\r\n        p.classList.add(\"input-content-note\");\r\n        inputContent.appendChild(p);\r\n        inputContent.style.display = \"block\";\r\n        inputNote.value = '';\r\n    }\r\n}\r\n\r\n\r\nfunction addToLocalStorage(){\r\n    const title = inputTitle.value;\r\n    const notesArr = [];\r\n    const inputContentNotes = document.querySelectorAll('.input-content-note');\r\n\r\n    inputContentNotes.forEach(item => {\r\n        let note = item.innerText;\r\n        let notes = {\r\n            \"Note\" : note,\r\n            \"Status\": \"incomplete\"\r\n        }\r\n\r\n        notesArr.push(notes);\r\n    });\r\n    \r\n    const task = [\r\n        {\r\n            \"Title\" : title,\r\n        },\r\n        notesArr\r\n    ];\r\n\r\n    tasks.push(task);\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks));\r\n\r\n    inputTitle.value = '';\r\n    inputNote.innerText = '';\r\n    inputContent.innerText = '';\r\n    inputContent.style.display = \"none\";\r\n\r\n    renderNotes();\r\n}\r\n\r\n//Adding the prepared notes to the Note Box\r\nfunction renderNotes(){\r\n    clearNotesWrapper()\r\n    tasks.forEach(task => {\r\n        const title = task[0].Title;\r\n\r\n        //create every div / subdiv\r\n        const divNoteBox = document.createElement('div');\r\n        divNoteBox.classList.add(\"note-box\");\r\n\r\n        const divNoteTitleWrapper = document.createElement('div');\r\n        divNoteTitleWrapper.classList.add(\"note-title-wrapper\");\r\n\r\n        const divNoteTitle = document.createElement('div');\r\n        divNoteTitle.classList.add(\"note-title\");\r\n        divNoteTitle.innerText = title;\r\n\r\n        const divNoteDeleteIcon = document.createElement('div');\r\n        divNoteDeleteIcon.classList.add(\"note-delete-icon\");\r\n\r\n        const deleteIcon = document.createElement('i')\r\n        deleteIcon.classList.add(\"fas\");\r\n        deleteIcon.classList.add(\"fa-trash-alt\");\r\n\r\n        const divNoteContentWrapper = document.createElement('div');\r\n        divNoteContentWrapper.classList.add(\"note-content-wrapper\");\r\n\r\n        //append divs to each other\r\n        divNoteBox.appendChild(divNoteTitleWrapper);\r\n        divNoteDeleteIcon.appendChild(deleteIcon);\r\n        divNoteTitleWrapper.appendChild(divNoteTitle);\r\n        divNoteTitleWrapper.appendChild(divNoteDeleteIcon);\r\n        divNoteBox.appendChild(divNoteContentWrapper);\r\n        \r\n        task[1].forEach(item => {\r\n            const divNote = document.createElement('div');\r\n            divNote.classList.add(\"note\");\r\n            divNote.innerText = item.Note;\r\n            divNote.addEventListener(\"click\", () => {\r\n                divNote.classList.toggle(\"complete\");\r\n            })\r\n            \r\n            if(item.Status === \"complete\"){\r\n                divNote.classList.add(\"complete\");\r\n            }\r\n    \r\n            divNoteContentWrapper.appendChild(divNote);\r\n        });\r\n            \r\n        // append note box to wrapper div, clear input fields\r\n        notesWrapper.appendChild(divNoteBox);\r\n    })\r\n}\r\n\r\n\r\nfunction clearNotesWrapper(){\r\n    notesWrapper.innerText = '';\r\n}\r\n"],"names":["document","getElementById","inputBox","inputTitle","inputNote","inputContent","notesWrapper","LOCAL_STORAGE_KEY","tasks","JSON","parse","localStorage","getItem","renderNotes","innerText","forEach","task","title","Title","divNoteBox","createElement","classList","add","divNoteTitleWrapper","divNoteTitle","divNoteDeleteIcon","deleteIcon","divNoteContentWrapper","appendChild","item","divNote","Note","addEventListener","toggle","Status","e","key","value","note","p","style","display","prepareNotes","contains","target","childElementCount","notesArr","querySelectorAll","notes","push","setItem","stringify","addToLocalStorage"],"sourceRoot":""}